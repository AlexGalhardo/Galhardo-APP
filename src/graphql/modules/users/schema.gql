type User {
	id: ID!
  name: String!
  email: String!
  confirmed_email: Boolean!
  confirm_email_token: String!
  password: String!
  reset_password_token: String!
  admin: String!
  avatar: String!
  document: String!
  phone: String!
  birth_date: String!
  google_id: String!
  github_id: String!
  facebook_id: String!
  address_zipcode: String!
  address_street: String!
  address_street_number: String!
  address_neighborhood: String!
  address_city: String!
  address_state: String!
  address_country: String!
  stripe_customer_id: String!
  stripe_card_id: String!
  stripe_card_brand: String!
  stripe_card_last4: String!
  stripe_card_exp_month: String!
  stripe_card_exp_year: String!
  stripe_currently_subscription_id: String!
  stripe_currently_subscription_name: String!
  stripe_subscription_start: String!
  stripe_subscription_end: String!
  stripe_cancel_at_period_end: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Blog {
  id: ID!
  title: String!
  resume: String!
  image: String!
  category: String!
  body:  String!
  slug:  String!
  createdAt: String!
  updatedAt: String!
}

type Game {
	id:	ID! 
  title: String!
  year_release: Int!
  price: Int!
  resume: String!
  image: String!
  igdb_link: String
  igdb_rating: Float!
  platforms: String!
  developer: String!
  genres: String!
  amazon_link: String!
  createdAt: String!
  updatedAt: String!
}

type Book {
	id:	ID! 
  title: String!
  year_release: Int!
  price: Int!
  resume: String!
  image: String!
  pages: String!
  genres: String!
  amazon_link: String!
  createdAt: String!
  updatedAt: String!
}

type Movie {
	id:	ID! 
  title: String!
  year_release: Int!
  image: String!
  tmdb_link: String!
  tmdb_rating: String!
  resume: String!
  duration: String!
  genres: String!
  createdAt: String!
  updatedAt: String!
}

type TVShow {
	id:	ID! 
  title: String!
  year_release: Int!
  image: String!
  tmdb_link: String!
  tmdb_rating: String!
  resume: String!
  duration: String!
  genres: String!
  createdAt: String!
  updatedAt: String!
}

input UserInput {
	name: String
	email: String
}

type Query {
	users: [User!]!
	user(id: ID!): User!
	findUserByEmail(email: String!): User!
	games: [Game!]!
	books: [Book!]!
	movies: [Movie!]!
	tvshows: [TVShow!]!
}

type Mutation {
	createUser(data: UserInput!): User!
	updateUser(id: ID, data: UserInput!): User!
	deleteUser(id: ID!): Boolean
}

type Subscription {
	userAdded: User!
}