type User {
	_id: ID!
	firstName: String!
	lastName: String!
	fullName: String!
	email: String
	active: Boolean!
}

type Game {
	_id:	ID! 
  title: String!
  year_release: Int!
  price: Int!
  resume: String!
  image: String!
  igdb_link: String
  igdb_rating: Float!
  platforms: String!
  developer: String!
  genres: String!
  amazon_link: String!
}

type Book {
	_id:	ID! 
  title: String!
  year_release: Int!
  price: Int!
  resume: String!
  image: String!
  pages: String!
  genres: String!
  amazon_link: String!
}

type Movie {
	_id:	ID! 
  title: String!
  year_release: Int!
  image: String!
  tmdb_link: String!
  tmdb_rating: String!
  resume: String!
  duration: String!
  genres: String!
}

type TVShow {
	_id:	ID! 
  title: String!
  year_release: Int!
  image: String!
  tmdb_link: String!
  tmdb_rating: String!
  resume: String!
  duration: String!
  genres: String!
}

input UserInput {
	firstName: String!
	lastName: String! 
	email: String
	active: Boolean!
}

type Query {
	users: [User!]!
	user(id: ID!): User!
	findUserByEmail(email: String!): User!
	games: [Game!]!
	books: [Book!]!
	movies: [Movie!]!
	tvshows: [TVShow!]!
}

type Mutation {
	createUser(data: UserInput!): User!
	updateUser(id: ID, data: UserInput!): User!
	deleteUser(id: ID!): Boolean
}

type Subscription {
	userAdded: User!
}